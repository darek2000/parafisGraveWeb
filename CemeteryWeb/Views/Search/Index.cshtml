@model CemeteryWeb.Models.SearchModel

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-13WJX567KS"></script>
<script>
	window.dataLayer = window.dataLayer || [];
	function gtag() { dataLayer.push(arguments); }
	gtag('js', new Date());

	gtag('config', 'G-13WJX567KS');
</script>

<script>
	//initial config variables
	var configSetViewCords = [51.64104, 15.06310];
	var configLatLngBounds = [[51.64168, 15.062754], [51.640705, 15.063543]];
	var configZoomLevel = 20.3;
	var configIdCemetery = 1;
	var configLocParamsLength = 3;
	var configLayerPic = 'aerial-custom.jpg';
	var configMaxZoom = 24;
</script>

<script type="text/javascript" src="../Scripts/cmentario.search.js"></script>

<div class="row">
	<div class="col-md-7">
		<h3>Mapa</h3>
		<input type="checkbox" id="cb-map-showshapes" name="cb-map-showshapes" value="" checked>&nbsp;pokaż obrysy grobów
		<div id="map" style="height: 1100px">
		</div>
	</div>
	<div class="col-md-5">
		<div class="row">
			<div class="col-md-10">
				<h3>Wyszukiwarka zmarłych</h3><br />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<div class="form-group">
					@Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.Name, htmlAttributes: new { placeholder = "Wprowadź imię", @style = "padding: 7px; width: 200px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			<div class="col-md-5">
				<div class="form-group">
					@Html.LabelFor(m => m.Surname, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.Surname, htmlAttributes: new { placeholder = "Wprowadź nazwisko", @style = "padding: 7px; width: 250px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-2">
				<div class="form-group">
					@Html.LabelFor(m => m.YearBirth, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.YearBirth, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			@*<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.DateBirth, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.DateBirth, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>*@
			<div class="col-md-2">
				<div class="form-group">
					@Html.LabelFor(m => m.YearDeath, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.YearDeath, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			@*<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.DateDeath, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.DateDeath, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>*@
		</div>
		<div class="row">
			<div class="col-md-2">
				<div class="form-group">
					@Html.LabelFor(m => m.Sector, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.Sector, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			<div class="col-md-2">
				<div class="form-group">
					@Html.LabelFor(m => m.Row, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.Row, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			<div class="col-md-2">
				<div class="form-group">
					@Html.LabelFor(m => m.Number, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
					@Html.TextBoxFor(m => m.Number, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
				</div>
			</div>
			<div class="col-md-2">
				<br />
				<button class="w-100 btn btn-md btn-primary" type="button" onclick="searchGrave()">Wyszukaj</button>
			</div>
		</div>
		<div class="row">
			<div class="col-md-7">
				<h3>Znaleziono zmarłych: <span id="deathCountSpan" style="color: red"></span></h3>
			</div>
			<div class="col-md-2">
			</div>
		</div>
		<div class="row">
			<div id="graveInfo" class="col-md-11" style="height: 800px; overflow-y: auto;">

			</div>
		</div>
	</div>
</div>

<script type="text/javascript" src="../Scripts/cmentario.init.js"></script>
<script type="text/javascript" src="../Scripts/cmentario.search.js"></script>
<script type="text/javascript" src="../Scripts/cmentario.event.search.js"></script>
<script type="text/javascript" src="../Scripts/cmentario.manipulation.js"></script>

<script>
	$(document).ready(function () {

		readPolygon();
	});

</script>

@*<script>
	var map = L.map('map').setView([51.64104, 15.06310], 20.3);

	var prevZoom = map.getZoom();

	var latLngBounds = L.latLngBounds([[51.64168, 15.062754], [51.640705, 15.063543]]);

	var polygons = [];

	var lastClicked = null;
	var lastSingleSelected = null;

	var colorGraveShape = '#888';
	var colorGraveSelected = 'red';

	var r1 = L.rectangle([[0, 0], [0, 0]]);

	var imageOverlayMarks = L.imageOverlay('/Images/aerial-custom-bright.jpg', latLngBounds, {
		opacity: 0.8,
		interactive: true
	});

	var imageOverlay = L.imageOverlay('/Images/aerial-custom.jpg', latLngBounds, {
		opacity: 0.8,
		interactive: true
	});

	map.on('zoomend', function (e) {
		var currZoom = map.getZoom();
		var diff = prevZoom - currZoom;
		if (currZoom == 20) {

			//if (map.hasLayer(imageOverlay)) {
			//	map.removeLayer(imageOverlay);
			//}

			//imageOverlayMarks.addTo(map);

			//if (polygons.length == 0) {
			//	readPolygon();
			//}
		}

		if (currZoom == 19) {

			if (map.hasLayer(imageOverlayMarks)) {
				map.removeLayer(imageOverlayMarks);
			}

			imageOverlay.addTo(map);
		}

		prevZoom = currZoom;
	});

	L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
		maxZoom: 22,
		attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	}).addTo(map);

	imageOverlay.addTo(map);

	var mapOutline = L.rectangle(latLngBounds,
		{
			color: 'black',
			weight: 1
		}).addTo(map);

	function onMapClick(e) {

		polygons.every(p => {

			if (p.getBounds().contains(e.latlng) == true) {
				if (lastClicked != null) {
					lastClicked.setStyle({ fillColor: colorGraveShape });
				}
				lastClicked = p;
				p.setStyle({ fillColor: colorGraveSelected });
				showGraveData(p.options.className);
				return false;
			}
			else {
				p.setStyle({ fillColor: colorGraveShape });
				return true;
			}
		});
	}

	map.on('click', onMapClick);

	readPolygon();

</script>*@