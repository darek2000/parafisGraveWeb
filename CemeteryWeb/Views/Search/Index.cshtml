@model CemeteryWeb.Models.SearchModel

<script>
	function searchGrave(e) {
		var valName = $("#Name").val();
		var valSurname = $("#Surname").val();
		var valSector = $("#Sector").val();
		var valRow = $("#Row").val();
		var valNumber = $("#Number").val();
		var valYearBirth = $("#YearBirth").val();
		var valYearDeath = $("#YearDeath").val();

		if (valName != "" || valSurname != "" || valSector != "" || valRow != "" || valNumber != "" || valYearBirth != "" || valYearDeath != "")
			$.ajax({
				type: "POST",
				url: '/Search/SearchGrave',
				data: { namePerson: valName, surnamePerson: valSurname, sector: valSector, row: valRow, number: valNumber, yearBirth: valYearBirth, yearDeath: valYearDeath },
				success: function (data, textStatus, jqXHR) {
					$('#graveInfo').html(data);
				},
				error: function (a, b, c) {
					alert("Wystąpił bład podczas pobierania danych. Proszę skonatkować się ze wsparciem aplikacji")
				}
			});
	}

	function showGraveData(e) {

		$.ajax({
			type: "POST",
			url: '/Search/ShowGraveData',
			data: { graveDetails: e },
			success: function (data, textStatus, jqXHR) {
				$('#graveInfo').html(data);
			},
			error: function (a, b, c) {
				alert("Wystąpił bład podczas wyszukiwania danych. Proszę skonatkować się ze wsparciem aplikacji")
			}
		});
	}

	function readPolygon() {

		$.ajax({
			type: "POST",
			url: '/Map/Polygon_Read',
			//dataType: 'json',
			//data: { nameCategory: val },
			success: function (data, textStatus, jqXHR) {

				//alert(data);
				if (data == null) {
					return
				}

				polygons = [];

				data.forEach(addPolygon);

				//drawPolygons();
			},
			error: function (a, b, c) {
				alert("Wystąpił bład podczas zaczytywania kształtów. Proszę skontaktować się ze wsparciem aplikacji")
			}
		});
	}

	function importPolygon() {

		$.ajax({
			type: "POST",
			url: '/Map/ImportGraveDetails',
			//dataType: 'json',
			//data: { nameCategory: val },
			success: function (data, textStatus, jqXHR) {

				alert(data.message);

			},
			error: function (a, b, c) {
				alert("Wystąpił bład podczas importu kształtów. Proszę skontaktować się ze wsparciem aplikacji")
			}
		});
	}

	function unselectGraves() {

		polygons.every(p => {

				p.setStyle({ fillColor: colorGraveShape });

				return true;
		});

		lastSingleSelected = null;
		lastClicked = null;
	}

	function showGravesOnTheMap(item) {

		polygons.every(p => {

			if (p.options.className == item.Location) {

				p.setStyle({ fillColor: colorGraveSelected });

				return false;
			}
			else {

				return true;
			}

		});
	}

	function showSingleGrave(location) {

		if (lastSingleSelected != null)
			lastSingleSelected.setStyle({ fillColor: colorGraveSelected });

		var grave = polygons.find(p => p.options.className == location)

		if (grave == null)
			return;

		grave.setStyle({ fillColor: 'green' });

		lastSingleSelected = grave;
	}

	function addPolygon(item) {

		if (item.Points.length == 2) {

			polygons.push(new L.rectangle([[item.Points[0].X, item.Points[0].Y], [item.Points[1].X, item.Points[1].Y]],
				{
					className: item.Name,
					color: 'gray',
					weight: 1,
					fillColor: '#888',
					fillOpacity: 0.5
				}).addTo(map));
		}

		else if (item.Points.length > 2) {

			var polyShape = [];

			item.Points.forEach((p) => { polyShape.push([p.X, p.Y]) });
			polyShape.push([item.Points[0].X, item.Points[0].Y]);	//closing shape

			polygons.push(new L.polyline(polyShape,
				{
					className: item.Name,
					color: 'yellow',
					weight: 1,
					fillColor: '#888',
					fillOpacity: 0.5
				}).addTo(map));
		}
	}

	function drawPolygons() {

	}
</script>

<div class="row">
	<div class="col-md-7">
		<h3>Mapa</h3>
		<div id="map" style="height: 600px">
		</div>
		<footer>
			<p>&copy; @DateTime.Now.Year - Inwentaryzacja danych została wykonana przez <a target="_blank" href="http://www.archiveo.pl">Archiveo.pl</a>. Wykorzystano system do zarządzania cmentarzem <a target="_blank" href="http://cmentario.pl">Cmentario.pl</a>. Wszelkie prawa zastrzeżone</p>
		</footer>
	</div>
		<div class="col-md-5">
			<div class="row">
				<div class="col-md-10">
					<h3>Wyszukiwarka zmarłych</h3><br />
				</div>
			</div>
			<div class="row">
				<div class="col-md-4">
					<div class="form-group">
						@Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.Name, htmlAttributes: new { placeholder = "Wprowadź imię", @style = "padding: 7px; width: 200px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				<div class="col-md-5">
					<div class="form-group">
						@Html.LabelFor(m => m.Surname, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.Surname, htmlAttributes: new { placeholder = "Wprowadź nazwisko", @style = "padding: 7px; width: 250px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.YearBirth, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.YearBirth, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				@*<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.DateBirth, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.DateBirth, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>*@
				<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.YearDeath, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.YearDeath, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				@*<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.DateDeath, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.DateDeath, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 90px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>*@
			</div>
			<div class="row">
				<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.Sector, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.Sector, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.Row, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.Row, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				<div class="col-md-2">
					<div class="form-group">
						@Html.LabelFor(m => m.Number, htmlAttributes: new { @class = "control-label", @style = "color:gray" })<br />
						@Html.TextBoxFor(m => m.Number, htmlAttributes: new { placeholder = "Wprowadź", @style = "padding: 7px; width: 100px; border:1px solid lightgray;border-radius:3px;border-color:lightgray" })
					</div>
				</div>
				<div class="col-md-2">
					<br />
					<button class="w-100 btn btn-md btn-primary" type="button" onclick="searchGrave()">Wyszukaj</button>
				</div>
			</div>
			<div class="row">
				<div class="col-md-7">
					<h3>Znaleziono zmarłych: <span id="deathCountSpan" style="color: red"></span></h3>
				</div>
				<div class="col-md-2">
				</div>
			</div>
			<div class="row">
				<div id="graveInfo" class="col-md-11" style="height: 390px; overflow-y: auto;">

				</div>
			</div>
		</div>
</div>

<script>
	var map = L.map('map').setView([51.64124, 15.06310], 19);

	var prevZoom = map.getZoom();

	var latLngBounds = L.latLngBounds([[51.64168, 15.062754], [51.640705, 15.063543]]);

	var polygons = [];

	var lastClicked = null;
	var lastSingleSelected = null;

	var colorGraveShape = '#888';
	var colorGraveSelected = 'red';

	var r1 = L.rectangle([[0, 0], [0, 0]]);

	var imageOverlayMarks = L.imageOverlay('/Images/aerial-custom-bright.jpg', latLngBounds, {
		opacity: 0.8,
		interactive: true
	});

	var imageOverlay = L.imageOverlay('/Images/aerial-custom.jpg', latLngBounds, {
		opacity: 0.8,
		interactive: true
	});

	map.on('zoomend', function (e) {
		var currZoom = map.getZoom();
		var diff = prevZoom - currZoom;
		if (currZoom == 20) {

			if (map.hasLayer(imageOverlay)) {
				map.removeLayer(imageOverlay);
			}

			imageOverlayMarks.addTo(map);

			if (polygons.length == 0) {
				readPolygon();
			}
		}

		if (currZoom == 19) {

			if (map.hasLayer(imageOverlayMarks)) {
				map.removeLayer(imageOverlayMarks);
			}

			imageOverlay.addTo(map);
		}

		prevZoom = currZoom;
	});

	L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
		maxZoom: 22,
		attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	}).addTo(map);

	imageOverlay.addTo(map);

	var mapOutline = L.rectangle(latLngBounds,
		{
			color: 'black',
			weight: 1
		}).addTo(map);

	function onMapClick(e) {

		polygons.every(p => {

			if (p.getBounds().contains(e.latlng) == true) {
				if (lastClicked != null) {
					lastClicked.setStyle({ fillColor: colorGraveShape });
				}
				lastClicked = p;
				p.setStyle({ fillColor: colorGraveSelected });
				showGraveData(p.options.className);
				return false;
			}
			else {
				p.setStyle({ fillColor: colorGraveShape });
				return true;
			}
		});
	}

	map.on('click', onMapClick);

</script>